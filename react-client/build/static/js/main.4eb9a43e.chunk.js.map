{"version":3,"sources":["components/home.js","components/pairing.js","components/addStudent.js","components/history.js","App.js","serviceWorker.js","index.js"],"names":["Home","classes","this","props","react_default","a","createElement","className","root","index_es","container","direction","justify","alignItems","item","Card","Link","to","style","color","Button","Component","withStyles","theme","left","top","padding","backgroundColor","height","width","Pairing","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","AddStudent","history","App","BrowserRouter","Switch","Route","path","component","addStudent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAsBMA,mLACO,IACGC,EAAYC,KAAKC,MAAjBF,QACR,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAQO,MACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,eAAeC,WAAW,UACjET,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACNV,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAWN,EAAQc,MACrBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,cAAcC,MAAO,CAAEC,MAAO,UACnCf,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQF,UAAWN,EAAQmB,QAA3B,kBAMZhB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACNV,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACNV,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAWN,EAAQc,MACrBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,WAAWC,MAAO,CAAEC,MAAO,UAChCf,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQF,UAAWN,EAAQmB,QAA3B,aAMZhB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACNV,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACNV,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAWN,EAAQc,MACrBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,WAAWC,MAAO,CAAEC,MAAO,UAChCf,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQF,UAAWN,EAAQmB,QAA3B,uBAjCbC,aA+CJC,uBA/DA,SAAAC,GAAK,MAAK,CACrBf,KAAM,CACFgB,KAAM,MACNC,IAAK,MACLC,QAAS,SAEbX,KAAM,CACFY,gBAAiB,WAErBP,OAAQ,CACJD,MAAO,QACPS,OAAQ,OACRC,MAAO,WAmDAP,CAAmBtB,GC5D5B8B,cACF,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAA4B,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlC,KAAMC,KAEDkC,MAAQ,GAHEN,wEAMK7B,KAAKC,MAAjBF,QACR,OACIG,EAAAC,EAAAC,cAAA,6BATUe,aAmBPC,uBAxBA,SAAAC,GAAK,MAAK,IAwBVD,CAAmBQ,GCnB5BQ,cACF,SAAAA,EAAYnC,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAAoC,IACfP,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAM,GAAAF,KAAAlC,KAAMC,KAEDkC,MAAQ,GAHEN,wEAMK7B,KAAKC,MAAjBF,QACR,OACIG,EAAAC,EAAAC,cAAA,iCATae,aAmBVC,uBAxBA,SAAAC,GAAK,MAAK,IAwBVD,CAAmBgB,GCrB5BC,cACF,SAAAA,EAAYpC,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9B,KAAAqC,IACfR,EAAAC,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAO,GAAAH,KAAAlC,KAAMC,KAEDkC,MAAQ,GAHEN,wEAMK7B,KAAKC,MAAjBF,QACR,OACIG,EAAAC,EAAAC,cAAA,6BATUe,aAmBPC,uBAtBA,SAAAC,GAAK,MAAK,IAsBVD,CAAmBiB,GCHnBC,mLAbX,OACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW7C,IAC3BI,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWf,IAClC1B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWN,IAClCnC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,aAR7BzB,aCIE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4eb9a43e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card, Button } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        left: \"40%\",\r\n        top: \"40%\",\r\n        padding: \"150px\"\r\n    },\r\n    Card: {\r\n        backgroundColor: \"#494949\",\r\n    },\r\n    Button: {\r\n        color: \"white\",\r\n        height: \"70px\",\r\n        width: \"200px\",\r\n    }\r\n});\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid item>\r\n                        <Card className={classes.Card}>\r\n                            <Link to=\"/addStudent\" style={{ color: \"white\" }}>\r\n                                <Button className={classes.Button}>\r\n                                    ADD STUDENT\r\n                            </Button>\r\n                            </Link>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Card className={classes.Card}>\r\n                            <Link to=\"/pairing\" style={{ color: \"white\" }}>\r\n                                <Button className={classes.Button}>\r\n                                    PARING\r\n                            </Button>\r\n                            </Link>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <br />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Card className={classes.Card}>\r\n                            <Link to=\"/history\" style={{ color: \"white\" }}>\r\n                                <Button className={classes.Button}>\r\n                                    history\r\n                            </Button>\r\n                            </Link>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(Home);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\n\r\n\r\nclass Pairing extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                Pairing\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPairing.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(Pairing);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\n\r\n\r\nclass AddStudent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                Add Student\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddStudent.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(AddStudent);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\nclass history extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                history\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nhistory.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(history);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/home';\nimport Pairing from './components/pairing'\nimport addStudent from './components/addStudent'\nimport history from './components/history'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/pairing\" component={Pairing} />\n          <Route path=\"/history\" component={history} />\n          <Route path=\"/addStudent\" component={addStudent} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}